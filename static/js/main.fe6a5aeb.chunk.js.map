{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","components/Notification.js","components/Feedback.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions.module.css"],"names":["FeedbackOptions","onGood","onNeutral","onBad","className","styles","feedbackOptions","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","Feedback","state","handleGood","setState","handleNeutral","handleBad","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","defaultProps","initialValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"wQAiBeA,EAdS,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACtB,sBAAKC,UAAWC,IAAOC,gBAAvB,UACE,wBAAQC,KAAK,SAASC,QAASP,EAA/B,kBAGA,wBAAQM,KAAK,SAASC,QAASN,EAA/B,qBAGA,wBAAQK,KAAK,SAASC,QAASL,EAA/B,qBCOWM,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACf,qBAAKV,UAAU,aAAf,SACI,gCACE,uCAAUM,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACVC,EAAqB,EACvB,oDAAuBA,EAAvB,OACA,4DCDMC,EARC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACZ,sBAAKb,UAAU,aAAf,UACI,6BAAKY,IACJC,MCIMC,EAPM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mCACI,6BAAKA,OCGPC,E,4MASJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPU,WAAa,WACX,EAAKC,UAAS,SAAAF,GAAK,MAAK,CACpBX,KAAMW,EAAMX,KAAO,O,EAIzBc,cAAgB,WACd,EAAKD,UAAS,SAAAF,GAAK,MAAK,CACpBV,QAASU,EAAMV,QAAU,O,EAI/Bc,UAAY,WACV,EAAKF,UAAS,SAAAF,GAAK,MAAK,CACpBT,IAAKS,EAAMT,IAAM,O,EAIvBc,mBAAqB,YAClB,OAD4C,EAAxBhB,KAAwB,EAAlBC,QAAkB,EAATC,K,EAItCe,gCAAkC,YAA2B,IAAzBjB,EAAwB,EAAxBA,KAGlC,OADgC,IAALA,GADbA,EAD4C,EAAlBC,QAAkB,EAATC,M,4CASnD,WACE,MAA6BgB,KAAKP,MAA3BX,EAAP,EAAOA,KAAMC,EAAb,EAAaA,QAASC,EAAtB,EAAsBA,IAEtB,OACE,sBAAKR,UAAU,WAAf,UAEE,cAAC,EAAD,CAASY,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEf,OAAQ2B,KAAKN,WACbpB,UAAW0B,KAAKJ,cAChBrB,MAAOyB,KAAKH,cAGhB,cAAC,EAAD,CAAST,MAAO,aAAhB,SACsD,IAAlDY,KAAKF,mBAAmB,CAAChB,OAAMC,UAASC,QAAc,cAAC,EAAD,CAAcO,QAAS,sBAC/E,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOe,KAAKF,mBAAmB,CAAChB,OAAMC,UAASC,QAC/CE,mBAAoBc,KAAKD,gCAAgC,CAACjB,OAAMC,UAASC,mB,GAjE9DiB,aAAjBT,EACGU,aAAe,CACpBC,aAAc,GAuEHX,QCnEAY,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCISC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,gBAAkB,4C","file":"static/js/main.fe6a5aeb.chunk.js","sourcesContent":["import React from 'react';\nimport styles from './FeedbackOptions.module.css';\n\nconst FeedbackOptions = ({ onGood, onNeutral, onBad }) => (\n  <div className={styles.feedbackOptions}>\n    <button type=\"button\" onClick={onGood}>\n      Good\n    </button>\n    <button type=\"button\" onClick={onNeutral}>\n      Neutral\n    </button>\n    <button type=\"button\" onClick={onBad}>\n      Bad\n    </button>\n  </div>\n);\n\nexport default FeedbackOptions;","import React from 'react';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n    <div className=\"Statistics\">\n        <div>\n          <p>Good: {good}</p>\n          <p>Neutral: {neutral}</p>\n          <p>Bad: {bad}</p>\n          <p>Total: {total}</p>\n          {positivePercentage > 0 ? \n         <p>Positive feedback: {positivePercentage}%</p> :\n         <p>Positive feedback: 0%</p>\n          }\n        </div>\n    </div>\n  );\n\n\nexport default Statistics;","import React from 'react';\n\nconst Section = ({ title, children }) => (\n    <div className=\"Statistics\">\n        <h1>{title}</h1>\n        {children}\n    </div>\n);\n\n\nexport default Section;","import React from 'react';\n\nconst Notification = ({ message }) => (\n    <>\n        <h2>{message}</h2>\n    </>\n);\n\n\nexport default Notification;","import React, { Component } from 'react';\nimport FeedbackOptions from './FeedbackOptions';\nimport Statistics from './Statistics';\nimport Section from './Section';\nimport Notification from './Notification';\n\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  handleGood = () => {\n    this.setState(state => ({\n        good: state.good + 1,\n    }));\n  };\n\n  handleNeutral = () => {\n    this.setState(state => ({\n        neutral: state.neutral + 1,\n    }));\n  };\n\n  handleBad = () => {\n    this.setState(state => ({\n        bad: state.bad + 1,\n    }));\n  };\n\n  countTotalFeedback = ({good, neutral, bad}) => {\n     return good + neutral + bad;\n  }\n  \n  countPositiveFeedbackPercentage = ({good, neutral, bad}) => {\n    const total = good + neutral + bad;\n    const positivePercentage = good*100/total;\n    return positivePercentage;\n }\n  \n\n  \n\n  render() {\n    const {good, neutral, bad} = this.state;\n  \n    return (\n      <div className=\"Feedback\">\n        \n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            onGood={this.handleGood}\n            onNeutral={this.handleNeutral}\n            onBad={this.handleBad}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          { this.countTotalFeedback({good, neutral, bad}) === 0 ? <Notification message={\"No feedback given\"}/> :\n          <Statistics \n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={this.countTotalFeedback({good, neutral, bad})}\n            positivePercentage={this.countPositiveFeedbackPercentage({good, neutral, bad})}\n            /> }\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Feedback from './components/Feedback';\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <Feedback/>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackOptions\":\"FeedbackOptions_feedbackOptions__2UzHl\"};"],"sourceRoot":""}