{"version":3,"sources":["components/Controls.js","components/Value.js","components/Feedback.js","App.js","reportWebVitals.js","index.js"],"names":["Controls","onGood","onNeutral","onBad","className","type","onClick","Value","valueGood","valueNeutral","valueBad","Feedback","state","good","neutral","bad","handleGood","setState","prevState","value","handleNeutral","handleBad","this","Component","defaultProps","initialValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6QAiBeA,EAfE,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,UAAWC,EAAtB,EAAsBA,MAAtB,OACf,sBAAKC,UAAU,oBAAf,UACI,uDACF,wBAAQC,KAAK,SAASC,QAASL,EAA/B,kBAGA,wBAAQI,KAAK,SAASC,QAASJ,EAA/B,qBAGA,wBAAQG,KAAK,SAASC,QAASH,EAA/B,qBCEWI,EAXD,SAAC,GAAD,IAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,aAAcC,EAA5B,EAA4BA,SAA5B,OACV,qBAAKN,UAAU,oBAAf,SACI,gCACE,4CACA,uCAAUI,KACV,0CAAaC,KACb,sCAASC,WCHbC,G,kNASJC,MAAQ,CACNC,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAEPC,WAAa,WACX,EAAKC,UAAS,SAAAC,GAAS,MAAK,CAC1BC,MAAOD,EAAUC,MAAQ,O,EAI7BC,cAAgB,WACd,EAAKH,UAAS,SAAAC,GAAS,MAAK,CAC1BC,MAAOD,EAAUC,MAAQ,O,EAI7BE,UAAY,WACV,EAAKJ,UAAS,SAAAC,GAAS,MAAK,CAC1BC,MAAOD,EAAUC,MAAQ,O,4CAM7B,WACE,IAAQA,EAAUG,KAAKV,MAAfO,MAER,OACE,sBAAKf,UAAU,UAAf,UAGE,cAAC,EAAD,CACEH,OAAQqB,KAAKN,WACbd,UAAWoB,KAAKF,cAChBjB,MAAOmB,KAAKD,YAEd,cAAC,EAAD,CAAOF,MAAOA,W,GA9CCI,cAAjBZ,EACGa,aAAe,CACpBC,aAAc,GAkDHd,QC5CAe,EARH,WACV,OACE,8BACE,cAAC,EAAD,CAAUD,aAAc,QCIfE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.f6ac906e.chunk.js","sourcesContent":["import React from 'react';\n\nconst Controls = ({ onGood, onNeutral, onBad }) => (\n  <div className=\"Counter__controls\">\n      <h1>Please leave feedback</h1>\n    <button type=\"button\" onClick={onGood}>\n      Good\n    </button>\n    <button type=\"button\" onClick={onNeutral}>\n      Neutral\n    </button>\n    <button type=\"button\" onClick={onBad}>\n      Bad\n    </button>\n  </div>\n);\n\nexport default Controls;","import React from 'react';\n\nconst Value = ({ valueGood, valueNeutral, valueBad }) => (\n    <div className=\"Counter__controls\">\n        <div>\n          <h1>Statistics</h1>\n          <p>Good: {valueGood}</p>\n          <p>Neutral: {valueNeutral}</p>\n          <p>Bad: {valueBad}</p>\n        </div>\n    </div>\n  );\n\nexport default Value;","import React, { Component } from 'react';\nimport Controls from './Controls';\nimport Value from './Value';\nimport './Feedback.module.css';\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  static propTypes = {\n    //\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0\n  };\n  handleGood = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleNeutral = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  handleBad = () => {\n    this.setState(prevState => ({\n      value: prevState.value + 1,\n    }));\n  };\n\n  \n\n  render() {\n    const { value } = this.state;\n\n    return (\n      <div className=\"Counter\">\n        \n\n        <Controls\n          onGood={this.handleGood}\n          onNeutral={this.handleNeutral}\n          onBad={this.handleBad}\n        />\n        <Value value={value} />\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from 'react';\nimport Feedback from './components/Feedback';\n\n\n\nconst App = () => {\n  return (\n    <div>\n      <Feedback initialValue={10} />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}