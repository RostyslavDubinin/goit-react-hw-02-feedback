{"version":3,"sources":["components/FeedbackOptions.js","components/Statistics.js","components/Section.js","components/Notification.js","components/Feedback.js","App.js","reportWebVitals.js","index.js","components/FeedbackOptions.module.css"],"names":["FeedbackOptions","options","onLeaveFeedback","map","option","index","className","styles","button","onClick","Statistics","good","neutral","bad","total","positivePercentage","Section","title","children","Notification","message","Feedback","state","name","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","this","Component","defaultProps","initialValue","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"+QAeeA,EAZS,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,gBAAX,OACtB,8BACKD,EAAQE,KAAI,SAACC,EAAQC,GAAT,OACX,wBAEEC,UAAWC,IAAOC,OAClBC,QAAS,kBAAMP,EAAgBE,IAHjC,SAIEA,GAHKC,SCWAK,EAhBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qBAAKT,UAAU,aAAf,SACE,gCACE,uCAAUK,KACV,0CAAaC,KACb,sCAASC,KACT,wCAAWC,KACVC,EAAqB,EACpB,oDAAuBA,EAAvB,OAEA,4DCHOC,EAPC,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,SAAV,OACd,sBAAKZ,UAAU,aAAf,UACE,6BAAKW,IACJC,MCGUC,EANM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mCACE,6BAAKA,OCEHC,E,4MAKJC,MAAQ,CACNX,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAIPX,gBAAkB,SAACE,GACjB,IAAMmB,EAAOnB,EAAOmB,KACpB,EAAKC,UAAS,SAACC,GAAD,sBACXF,EAAOE,EAAUF,GAAQ,O,EAK9BG,mBAAqB,YACnB,OAD+C,EAAzBf,KAAyB,EAAnBC,QAAmB,EAAVC,K,EAIvCc,gCAAkC,YAA6B,IAA1BhB,EAAyB,EAAzBA,KAGnC,OADmC,IAAPA,GADdA,EAD8C,EAAnBC,QAAmB,EAAVC,M,4CAMpD,WACE,MAA+Be,KAAKN,MAA5BX,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IAGvB,OACE,sBAAKP,UAAU,WAAf,UACE,cAAC,EAAD,CAASW,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEhB,QANe,CAAC,OAAQ,UAAW,OAOnCC,gBAAiB0B,KAAK1B,oBAG1B,cAAC,EAAD,CAASe,MAAO,aAAhB,SACuD,IAApDW,KAAKF,mBAAmB,CAAEf,OAAMC,UAASC,QACxC,cAAC,EAAD,CAAcO,QAAS,sBAEvB,cAAC,EAAD,CACET,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,KAAKF,mBAAmB,CAAEf,OAAMC,UAASC,QAChDE,mBAAoBa,KAAKD,gCAAgC,CACvDhB,OACAC,UACAC,mB,GAtDOgB,aAAjBR,EACGS,aAAe,CACpBC,aAAc,GA8DHV,QC3DAW,EARH,WACV,OACE,8BACE,cAAC,EAAD,OCMSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K,kBCfAc,EAAOC,QAAU,CAAC,OAAS,mC","file":"static/js/main.65e98681.chunk.js","sourcesContent":["import React from \"react\";\nimport styles from \"./FeedbackOptions.module.css\";\n\nconst FeedbackOptions = ({options, onLeaveFeedback}) => (\n  <div>\n      {options.map((option, index) => (\n        <button\n          key={index}\n          className={styles.button}\n          onClick={() => onLeaveFeedback(option)}\n        >{option}</button>\n      ))}\n  </div>\n);\n\nexport default FeedbackOptions;\n","import React from \"react\";\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <div className=\"Statistics\">\n    <div>\n      <p>Good: {good}</p>\n      <p>Neutral: {neutral}</p>\n      <p>Bad: {bad}</p>\n      <p>Total: {total}</p>\n      {positivePercentage > 0 ? (\n        <p>Positive feedback: {positivePercentage}%</p>\n      ) : (\n        <p>Positive feedback: 0%</p>\n      )}\n    </div>\n  </div>\n);\n\nexport default Statistics;\n","import React from \"react\";\n\nconst Section = ({ title, children }) => (\n  <div className=\"Statistics\">\n    <h1>{title}</h1>\n    {children}\n  </div>\n);\n\nexport default Section;\n","import React from \"react\";\n\nconst Notification = ({ message }) => (\n  <>\n    <h2>{message}</h2>\n  </>\n);\n\nexport default Notification;\n","import React, { Component } from \"react\";\nimport FeedbackOptions from \"./FeedbackOptions\";\nimport Statistics from \"./Statistics\";\nimport Section from \"./Section\";\nimport Notification from \"./Notification\";\n\nclass Feedback extends Component {\n  static defaultProps = {\n    initialValue: 0,\n  };\n\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n  \n\n  onLeaveFeedback = (option) => {\n    const name = option.name;\n    this.setState((prevState) => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n  \n\n  countTotalFeedback = ({ good, neutral, bad }) => {\n    return good + neutral + bad;\n  };\n\n  countPositiveFeedbackPercentage = ({ good, neutral, bad }) => {\n    const total = good + neutral + bad;\n    const positivePercentage = (good * 100) / total;\n    return positivePercentage;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const optionsFeedbac = ['good', 'neutral', 'bad'];\n\n    return (\n      <div className=\"Feedback\">\n        <Section title={\"Please leave feedback\"}>\n          <FeedbackOptions\n            options={optionsFeedbac} \n            onLeaveFeedback={this.onLeaveFeedback}\n          />\n        </Section>\n        <Section title={\"Statistics\"}>\n          {this.countTotalFeedback({ good, neutral, bad }) === 0 ? (\n            <Notification message={\"No feedback given\"} />\n          ) : (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback({ good, neutral, bad })}\n              positivePercentage={this.countPositiveFeedbackPercentage({\n                good,\n                neutral,\n                bad,\n              })}\n            />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default Feedback;\n","import React from \"react\";\nimport Feedback from \"./components/Feedback\";\n\nconst App = () => {\n  return (\n    <div>\n      <Feedback />\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2sxsf\"};"],"sourceRoot":""}